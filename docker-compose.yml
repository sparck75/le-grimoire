services:
  # PostgreSQL Database (Legacy - will be phased out)
  db:
    image: postgres:15-alpine
    container_name: le-grimoire-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: grimoire
      POSTGRES_PASSWORD: grimoire_password
      POSTGRES_DB: le_grimoire
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U grimoire"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB Database (Open Food Facts Integration)
  mongodb:
    image: mongo:7.0
    container_name: le-grimoire-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER:-legrimoire}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD:-grimoire_mongo_password}
      MONGO_INITDB_DATABASE: ${MONGODB_DB_NAME:-legrimoire}
    volumes:
      - mongodb_data:/data/db
      - ./data/openfoodfacts:/data/openfoodfacts:ro
      - ./backend/scripts/mongodb:/docker-entrypoint-initdb.d
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping').ok"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 20s

  # Mongo Express (MongoDB Web UI - Optional)
  mongo-express:
    image: mongo-express:latest
    container_name: le-grimoire-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USER:-legrimoire}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASSWORD:-grimoire_mongo_password}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGODB_USER:-legrimoire}:${MONGODB_PASSWORD:-grimoire_mongo_password}@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    ports:
      - "8081:8081"
    depends_on:
      mongodb:
        condition: service_healthy

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: le-grimoire-backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://grimoire:grimoire_password@db:5432/le_grimoire
      MONGODB_URL: ${MONGODB_URL:-mongodb://legrimoire:grimoire_mongo_password@mongodb:27017/legrimoire?authSource=admin}
      MONGODB_DB_NAME: ${MONGODB_DB_NAME:-legrimoire}
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-in-production}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-your-jwt-secret-key-change-in-production}
      JWT_ALGORITHM: ${JWT_ALGORITHM:-HS256}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-10080}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-}
      APPLE_CLIENT_ID: ${APPLE_CLIENT_ID:-}
      APPLE_CLIENT_SECRET: ${APPLE_CLIENT_SECRET:-}
      REDIS_URL: redis://redis:6379
      # AI Recipe Extraction
      ENABLE_AI_EXTRACTION: ${ENABLE_AI_EXTRACTION:-false}
      AI_PROVIDER: ${AI_PROVIDER:-openai}
      AI_FALLBACK_ENABLED: ${AI_FALLBACK_ENABLED:-true}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      OPENAI_MODEL: ${OPENAI_MODEL:-gpt-4o}
      OPENAI_MAX_TOKENS: ${OPENAI_MAX_TOKENS:-2000}
      GOOGLE_AI_API_KEY: ${GOOGLE_AI_API_KEY:-}
      GEMINI_MODEL: ${GEMINI_MODEL:-gemini-1.5-flash}
    volumes:
      - ./backend:/app
      - ./data:/app/data
      - uploaded_images:/app/uploads
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      redis:
        condition: service_started
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: le-grimoire-frontend
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8000}
      BACKEND_URL: ${BACKEND_URL:-http://backend:8000}
      NEXT_PUBLIC_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-}
      NEXT_PUBLIC_APPLE_CLIENT_ID: ${APPLE_CLIENT_ID:-}
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    depends_on:
      - backend
    command: npm run dev

  # Redis for caching and task queue
  redis:
    image: redis:7-alpine
    container_name: le-grimoire-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  mongodb_data:
  redis_data:
  uploaded_images:
